[{"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\index.js":"1","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\App.js":"2","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\serviceWorker.js":"3","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ViewCase.js":"4","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ForensicHome.js":"5","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Home.js":"6","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\PoliceHome.js":"7","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ViewForensic.js":"8","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\NewFIR.js":"9","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\CrimeDetails\\Forensics.js":"10","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\CrimeScenePhotographs.js":"11","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ForensicList.js":"12","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\ipfs.js":"13","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Navbar\\ViewForensic.js":"14","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Navbar\\ViewCaseNav.js":"15","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\utils\\getWeb3.js":"16","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Login.js":"17","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\CaseList.js":"18","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Navbar\\GenericNavbar.js":"19","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\judgehome.js":"20"},{"size":463,"mtime":1718257340828,"results":"21","hashOfConfig":"22"},{"size":1435,"mtime":1718349365892,"results":"23","hashOfConfig":"22"},{"size":5083,"mtime":1718257340829,"results":"24","hashOfConfig":"22"},{"size":561,"mtime":1718258735565,"results":"25","hashOfConfig":"22"},{"size":1718,"mtime":1718336384909,"results":"26","hashOfConfig":"22"},{"size":255,"mtime":1718257340802,"results":"27","hashOfConfig":"22"},{"size":1724,"mtime":1718334864154,"results":"28","hashOfConfig":"22"},{"size":6453,"mtime":1718348179683,"results":"29","hashOfConfig":"22"},{"size":5739,"mtime":1718257340805,"results":"30","hashOfConfig":"22"},{"size":1099,"mtime":1718259375550,"results":"31","hashOfConfig":"22"},{"size":2142,"mtime":1718259410507,"results":"32","hashOfConfig":"22"},{"size":4558,"mtime":1718257340800,"results":"33","hashOfConfig":"22"},{"size":138,"mtime":1718334673179,"results":"34","hashOfConfig":"22"},{"size":626,"mtime":1718335256450,"results":"35","hashOfConfig":"22"},{"size":778,"mtime":1718335221143,"results":"36","hashOfConfig":"22"},{"size":1182,"mtime":1718257340830,"results":"37","hashOfConfig":"22"},{"size":4401,"mtime":1718349195456,"results":"38","hashOfConfig":"22"},{"size":4551,"mtime":1718336027019,"results":"39","hashOfConfig":"22"},{"size":560,"mtime":1718335057211,"results":"40","hashOfConfig":"22"},{"size":2590,"mtime":1718352474752,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"yoghlk",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\index.js",[],["89","90"],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\App.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\serviceWorker.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ViewCase.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ForensicHome.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Home.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\PoliceHome.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ViewForensic.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\NewFIR.js",["91","92","93","94"],"import React, { Component } from 'react';\r\nimport '../CSS/newFIR.css';\r\nimport GenericNavbar from './Navbar/GenericNavbar';\r\n\r\nimport SimpleStorageContract from \"../contracts/SimpleStorage.json\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\n\r\nclass NewFIR extends Component\r\n{\r\n    state = {buffer: null, web3: null, accounts: null, contract: null,\r\n        crime_id: '',\r\n        timestamp: '',\r\n        offense_code: '',\r\n        description: ''\r\n    };\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n          // Get network provider and web3 instance.\r\n          const web3 = await getWeb3();           \r\n          // Use web3 to get the user's accounts.\r\n          const accounts = await web3.eth.getAccounts();      \r\n    \r\n          // Get the contract instance.\r\n          const networkId = await web3.eth.net.getId();\r\n          const deployedNetwork = SimpleStorageContract.networks[networkId];\r\n          const instance = new web3.eth.Contract(\r\n            SimpleStorageContract.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n          );\r\n          console.log(deployedNetwork);    \r\n          // Set web3, accounts, and contract to the state, and then proceed with an\r\n          // example of interacting with the contract's methods.\r\n          this.setState({ web3, accounts, contract: instance }, this.runExample);\r\n          this.onGetDate();\r\n        } catch (error) {\r\n          // Catch any errors for any of the above operations.\r\n          alert(\r\n            `Failed to load web3, accounts, or contract. Check console for details.`,\r\n          );\r\n          console.error(error);\r\n        }\r\n      };\r\n    \r\n    \r\n    onSubmit(event) {\r\n        const { accounts, contract } = this.state;\r\n        event.preventDefault()\r\n        this.onGetDate();\r\n        contract.methods.addCrimeReport(this.state.crime_id, this.state.timestamp, this.state.offense_code, this.state.description).send({from: accounts[0]});\r\n    }\r\n\r\n    onGetDate() {\r\n        var date = new Date();\r\n        var year = date.getFullYear().toString();\r\n        var month = (date.getMonth() + 101).toString().substring(1);\r\n        var day = (date.getDate() + 100).toString().substring(1);\r\n        var hour = (date.getHours() + 100).toString().substring(1); \r\n        var mins = (date.getMinutes() + 100).toString().substring(1);\r\n        var sec = (date.getSeconds() + 100).toString().substring(1);    \r\n        this.setState({\r\n            timestamp : year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + mins + \":\" + sec\r\n        });\r\n        // console.log(year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + mins + \":\" + sec);\r\n      }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className = \"\">\r\n                <GenericNavbar/>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s6\">\r\n                        <div className=\"card reportCard\">\r\n                            <div className=\"card-title cardTitle2\">\r\n                                <h4 className = \"cardTitle\">New FIR</h4>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"input-field\">\r\n                                        <input type=\"text\" id=\"caseId\" onChange={(evt) => { this.state.crime_id =  evt.target.value; }} required/>\r\n                                        <label htmlFor=\"email\">Case ID</label>\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input value={this.state.timestamp} type=\"text\" id=\"timestamp\" readOnly onChange={(evt) => { this.state.timestamp =  evt.target.value; }} required/>\r\n                                        {/* <label htmlFor=\"email\">Time Stamp</label> */}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input type=\"text\" id=\"offCode\" onChange={(evt) => { this.state.offense_code =  evt.target.value; }} required/>\r\n                                        <label htmlFor=\"offCode\">Offense Code</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-submit center\">\r\n                                        <button type=\"submit\" className=\"dropbtn1\" style={{marginTop:\"10px\"}}>Upload to Blockchain</button>  \r\n                                    </div>\r\n                                    \r\n                                </form> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col s6\">\r\n                        <div className=\"card reportCard\">\r\n                            <div className=\"card-title cardTitle\">\r\n                                <h4 className = \"cardTitle\">Enter Description</h4>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"input-field \">\r\n                                    <textarea id = \"report\"  className = \"textAreaHeight\" onChange={(evt) => { this.state.description =  evt.target.value; }} required></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewFIR;","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\CrimeDetails\\Forensics.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\CrimeScenePhotographs.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\ForensicList.js",["95","96"],"import React, { Component } from 'react';\r\nimport ViewCase from './ViewCase';\r\nimport {Link} from 'react-router';\r\nimport SimpleStorageContract from \"../contracts/SimpleStorage.json\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\n\r\nimport '../CSS/policeList.css';\r\n\r\nclass ForensicList extends Component{\r\n\r\n    state = {\r\n        details : [],\r\n        getDetailsOf: null\r\n    }\r\n\r\n    componentDidMount () {\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n          // Get network provider and web3 instance.\r\n          const web3 = await getWeb3(); \r\n\r\n          // Use web3 to get the user's accounts.\r\n          const accounts = await web3.eth.getAccounts();\r\n\r\n          // Get the contract instance.\r\n          const networkId = await web3.eth.net.getId();\r\n          const deployedNetwork = SimpleStorageContract.networks[networkId];\r\n          const instance = new web3.eth.Contract(\r\n            SimpleStorageContract.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n          );          \r\n          // Set web3, accounts, and contract to the state, and then proceed with an\r\n          // example of interacting with the contract's methods.\r\n          this.setState({ web3, accounts, contract: instance }, this.runExample);     \r\n          this.getVal();         \r\n\r\n\r\n        //   // bootstrap links\r\n        // const script1 = document.createElement(\"script\");\r\n        // const script2 = document.createElement(\"script\");\r\n        // const script3 = document.createElement(\"script\");\r\n\r\n        // const link = document.createElement(\"link\");\r\n\r\n        // script1.src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\";\r\n        // script2.src = \"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\";\r\n        // script3.src = \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\";\r\n        // link.src = \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\";\r\n        \r\n        // script1.async = true;\r\n        // script2.async = true;\r\n        // script3.async = true;\r\n        // link.async = true;\r\n    \r\n        // document.body.appendChild(script1);\r\n        // document.body.appendChild(script2);\r\n        // document.body.appendChild(script3);\r\n        // document.body.appendChild(link);\r\n\r\n        } catch (error) {\r\n          // Catch any errors for any of the above operations.\r\n          alert(\r\n            `Failed to load web3, accounts, or contract. Check console for details.`,\r\n          );\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      getVal= async () =>{\r\n        const { accounts, contract } = this.state;  \r\n                var response2 = await contract.methods.getAllCrimeDetails().call(); \r\n                this.setState({\r\n                    details: response2\r\n                }); \r\n                console.log(this.state.details);             \r\n      };\r\n\r\n    render() {\r\n        var arr = [];\r\n        var details = this.state.details;\r\n        for (var key in details) {\r\n            arr.push(details[key]);\r\n        }\r\n\r\n        const crimes = arr.length ?\r\n        (\r\n            arr.map(arr => \r\n            {\r\n                var toLink = \"forensicUpdate/\" + arr.crime_id;\r\n            return (\r\n                <Link to = {toLink}>\r\n\r\n                <div className = \"card\" key = {arr.crime_id}>\r\n                <div className=\"row listItem\" >\r\n                        <div className=\"col s3 black-text\">\r\n                            <h6>{arr.crime_id}</h6>\r\n                        </div>\r\n                        <div className=\"col s3 black-text \">\r\n                            <h6>{arr.offense_code}</h6>\r\n                        </div>\r\n                        <div className=\"col s3 black-text \">\r\n                            <h6>{arr.description}</h6>\r\n                        </div>\r\n                        <div className=\"col s3 black-text \">\r\n                            <h6>{arr.timestamp}</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Link>\r\n                )\r\n            })\r\n        ):\r\n        (       \r\n                <div className=\"error\">\r\n                    <h3>No crimes!</h3>\r\n                </div>\r\n        )\r\n\r\n         return(\r\n            <div className=\"notes\">\r\n                {crimes}\r\n             </div>\r\n         )\r\n    }\r\n    clicked = (clicked) =>\r\n    {\r\n        this.setState({\r\n            getDetailsOf : clicked\r\n        })\r\n\r\n    }   \r\n}\r\n\r\nexport default ForensicList;","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\ipfs.js",[],["97","98"],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Navbar\\ViewForensic.js",["99","100"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ViewForensic = (props) => \r\n{\r\n    var {crimeId} = props;\r\n    var url = \"/\";\r\n    return (\r\n       \r\n        <nav className=\"nav-wrapper grey darken-4 navbar\">\r\n            <div className=\"container\">\r\n                <b><a href=\"/\" className=\"brand-logo\">E-Vault</a></b>\r\n                <ul className = \"right\">\r\n                <li><a href=\"/forensichome\">Home</a></li>\r\n                <li> <a href={url}> Logout </a></li>\r\n                </ul>\r\n                </div> \r\n        </nav>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default ViewForensic;","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Navbar\\ViewCaseNav.js",["101","102","103","104"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ViewCaseNav = (props) => \r\n{\r\n    var {crimeId} = props;\r\n    var url = \"/crimedata/forensics/\"+crimeId;\r\n    return (\r\n       \r\n        <nav className=\"nav-wrapper grey darken-4 navbar\">\r\n            <div className=\"container\">\r\n                <b><a href=\"/\" className=\"brand-logo\">E-Vault</a></b>\r\n                <ul className = \"right\">\r\n                <li><a href=\"\">Case Details</a></li>\r\n                <li> <a href={url}> Forensic Reports</a></li>\r\n                <li><a href=\"\"> Other Reports</a></li>\r\n                <li> <a href=\"\">Crime Scene Photographs</a></li>\r\n                </ul>\r\n                </div> \r\n        </nav>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default ViewCaseNav;","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\utils\\getWeb3.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Login.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\CaseList.js",["105"],"import React, { Component } from 'react';\r\n//import ViewCase from './ViewCase';\r\nimport {Link} from 'react-router';\r\nimport SimpleStorageContract from \"../contracts/SimpleStorage.json\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\n\r\nimport '../CSS/policeList.css';\r\n\r\nclass CaseList extends Component{\r\n\r\n    state = {\r\n        details : [],\r\n        getDetailsOf: null\r\n    }\r\n\r\n    componentDidMount () {\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n          // Get network provider and web3 instance.\r\n          const web3 = await getWeb3(); \r\n\r\n          // Use web3 to get the user's accounts.\r\n          const accounts = await web3.eth.getAccounts();\r\n\r\n          // Get the contract instance.\r\n          const networkId = await web3.eth.net.getId();\r\n          const deployedNetwork = SimpleStorageContract.networks[networkId];\r\n          const instance = new web3.eth.Contract(\r\n            SimpleStorageContract.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n          );          \r\n          // Set web3, accounts, and contract to the state, and then proceed with an\r\n          // example of interacting with the contract's methods.\r\n          this.setState({ web3, accounts, contract: instance }, this.runExample);     \r\n          this.getVal();         \r\n\r\n\r\n        //   // bootstrap links\r\n        // const script1 = document.createElement(\"script\");\r\n        // const script2 = document.createElement(\"script\");\r\n        // const script3 = document.createElement(\"script\");\r\n\r\n        // const link = document.createElement(\"link\");\r\n\r\n        // script1.src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\";\r\n        // script2.src = \"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\";\r\n        // script3.src = \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\";\r\n        // link.src = \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\";\r\n        \r\n        // script1.async = true;\r\n        // script2.async = true;\r\n        // script3.async = true;\r\n        // link.async = true;\r\n    \r\n        // document.body.appendChild(script1);\r\n        // document.body.appendChild(script2);\r\n        // document.body.appendChild(script3);\r\n        // document.body.appendChild(link);\r\n\r\n        } catch (error) {\r\n          // Catch any errors for any of the above operations.\r\n          alert(\r\n            `Failed to load web3, accounts, or contract. Check console for details.`,\r\n          );\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      getVal= async () =>{\r\n        const { accounts, contract } = this.state;  \r\n                var response2 = await contract.methods.getAllCrimeDetails().call(); \r\n                this.setState({\r\n                    details: response2\r\n                });\r\n                console.log(this.state.details);             \r\n      };\r\n\r\n    render() {\r\n        var arr = [];\r\n        var details = this.state.details;\r\n        for (var key in details) {\r\n            arr.push(details[key]);\r\n        }\r\n\r\n        const crimes = arr.length ?\r\n        (\r\n            arr.map(arr => \r\n            {\r\n                var toLink = \"forensicUpdate/\" + arr.crime_id;\r\n            return (\r\n                <Link to = {toLink}>\r\n\r\n                <div className = \"card\" key = {arr.crime_id}>\r\n                <div className=\"row listItem\" >\r\n                        <div className=\"col s3 black-text\">\r\n                            <h6>{arr.crime_id}</h6>\r\n                        </div>\r\n                        <div className=\"col s3 black-text \">\r\n                            <h6>{arr.offense_code}</h6>\r\n                        </div>\r\n                        <div className=\"col s3 black-text \">\r\n                            <h6>{arr.description}</h6>\r\n                        </div>\r\n                        <div className=\"col s3 black-text \">\r\n                            <h6>{arr.timestamp}</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Link>\r\n                )\r\n            })\r\n        ):\r\n        (       \r\n                <div className=\"error\">\r\n                    <h3>No crimes!</h3>\r\n                </div>\r\n        )\r\n\r\n         return(\r\n            <div className=\"notes\">\r\n                {crimes}\r\n             </div>\r\n         )\r\n    }\r\n    clicked = (clicked) =>\r\n    {\r\n        this.setState({\r\n            getDetailsOf : clicked\r\n        })\r\n\r\n    }   \r\n}\r\n\r\nexport default CaseList;","C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\Navbar\\GenericNavbar.js",[],"C:\\6th sem\\bc\\Crime-Records-Blockchain\\client\\src\\components\\judgehome.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":88,"column":93,"nodeType":"112","messageId":"113","endLine":88,"endColumn":103},{"ruleId":"110","severity":1,"message":"111","line":92,"column":134,"nodeType":"112","messageId":"113","endLine":92,"endColumn":144},{"ruleId":"110","severity":1,"message":"111","line":96,"column":94,"nodeType":"112","messageId":"113","endLine":96,"endColumn":104},{"ruleId":"110","severity":1,"message":"111","line":115,"column":112,"nodeType":"112","messageId":"113","endLine":115,"endColumn":122},{"ruleId":"114","severity":1,"message":"115","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":16},{"ruleId":"114","severity":1,"message":"118","line":73,"column":17,"nodeType":"116","messageId":"117","endLine":73,"endColumn":25},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},{"ruleId":"114","severity":1,"message":"121","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"114","severity":1,"message":"122","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":17},{"ruleId":"114","severity":1,"message":"121","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":14,"column":21,"nodeType":"125","endLine":14,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":16,"column":21,"nodeType":"125","endLine":16,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":17,"column":22,"nodeType":"125","endLine":17,"endColumn":33},{"ruleId":"114","severity":1,"message":"118","line":73,"column":17,"nodeType":"116","messageId":"117","endLine":73,"endColumn":25},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-unused-vars","'ViewCase' is defined but never used.","Identifier","unusedVar","'accounts' is assigned a value but never used.",["126"],["127"],"'Link' is defined but never used.","'crimeId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]