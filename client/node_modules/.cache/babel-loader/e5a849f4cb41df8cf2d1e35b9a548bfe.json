{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = require('es-errors/type');\nvar max = GetIntrinsic('%Math.max%');\nvar min = GetIntrinsic('%Math.min%');\n\n// https://262.ecma-international.org/12.0/#clamping\n\nmodule.exports = function clamp(x, lower, upper) {\n  if (typeof x !== 'number' || typeof lower !== 'number' || typeof upper !== 'number' || !(lower <= upper)) {\n    throw new $TypeError('Assertion failed: all three arguments must be MVs, and `lower` must be `<= upper`');\n  }\n  return min(max(lower, x), upper);\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","max","min","module","exports","clamp","x","lower","upper"],"sources":["C:/6th sem/bc/Crime-Records-Blockchain/client/node_modules/es-abstract/2024/clamp.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar max = GetIntrinsic('%Math.max%');\nvar min = GetIntrinsic('%Math.min%');\n\n// https://262.ecma-international.org/12.0/#clamping\n\nmodule.exports = function clamp(x, lower, upper) {\n\tif (typeof x !== 'number' || typeof lower !== 'number' || typeof upper !== 'number' || !(lower <= upper)) {\n\t\tthrow new $TypeError('Assertion failed: all three arguments must be MVs, and `lower` must be `<= upper`');\n\t}\n\treturn min(max(lower, x), upper);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC1C,IAAIE,GAAG,GAAGH,YAAY,CAAC,YAAY,CAAC;AACpC,IAAII,GAAG,GAAGJ,YAAY,CAAC,YAAY,CAAC;;AAEpC;;AAEAK,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACC,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAChD,IAAI,OAAOF,CAAC,KAAK,QAAQ,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAI,EAAED,KAAK,IAAIC,KAAK,CAAC,EAAE;IACzG,MAAM,IAAIR,UAAU,CAAC,mFAAmF,CAAC;EAC1G;EACA,OAAOE,GAAG,CAACD,GAAG,CAACM,KAAK,EAAED,CAAC,CAAC,EAAEE,KAAK,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}