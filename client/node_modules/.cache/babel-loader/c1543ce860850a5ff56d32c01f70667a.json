{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nvar stat = require('./files/stat.js');\nconst createLs = configure.configure((api, opts) => {\n  function ls(path) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const pathStr = \"\".concat(path instanceof Uint8Array ? cid.CID.decode(path) : path);\n        async function mapLink(link) {\n          let hash = link.Hash;\n          if (hash.includes('/')) {\n            const ipfsPath = hash.startsWith('/ipfs/') ? hash : \"/ipfs/\".concat(hash);\n            const stats = await stat.createStat(opts)(ipfsPath);\n            hash = stats.cid;\n          } else {\n            hash = cid.CID.parse(hash);\n          }\n          const entry = {\n            name: link.Name,\n            path: pathStr + (link.Name ? \"/\".concat(link.Name) : ''),\n            size: link.Size,\n            cid: hash,\n            type: typeOf(link)\n          };\n          if (link.Mode) {\n            entry.mode = parseInt(link.Mode, 8);\n          }\n          if (link.Mtime !== undefined && link.Mtime !== null) {\n            entry.mtime = {\n              secs: link.Mtime\n            };\n            if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n              entry.mtime.nsecs = link.MtimeNsecs;\n            }\n          }\n          return entry;\n        }\n        const res = await api.post('ls', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            arg: pathStr,\n            ...options\n          }),\n          headers: options.headers\n        });\n        for await (let result of res.ndjson()) {\n          result = result.Objects;\n          if (!result) {\n            throw new Error('expected .Objects in results');\n          }\n          result = result[0];\n          if (!result) {\n            throw new Error('expected one array in results.Objects');\n          }\n          const links = result.Links;\n          if (!Array.isArray(links)) {\n            throw new Error('expected one array in results.Objects[0].Links');\n          }\n          if (!links.length) {\n            yield mapLink(result);\n            return;\n          }\n          yield* links.map(mapLink);\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return ls;\n});\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n    case 2:\n      return 'file';\n    default:\n      return 'file';\n  }\n}\nexports.createLs = createLs;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","stat","createLs","api","opts","ls","path","options","arguments","length","undefined","pathStr","concat","Uint8Array","CID","decode","mapLink","link","hash","Hash","includes","ipfsPath","startsWith","stats","createStat","parse","entry","name","Name","size","Size","type","typeOf","Mode","mode","parseInt","Mtime","mtime","secs","MtimeNsecs","nsecs","res","post","signal","searchParams","arg","headers","result","ndjson","Objects","Error","links","Links","Array","isArray","map","e","Promise","reject","Type"],"sources":["C:/6th sem/bc/Crime-Records-Blockchain/client/node_modules/ipfs-http-client/cjs/src/ls.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nvar stat = require('./files/stat.js');\n\nconst createLs = configure.configure((api, opts) => {\n  async function* ls(path, options = {}) {\n    const pathStr = `${ path instanceof Uint8Array ? cid.CID.decode(path) : path }`;\n    async function mapLink(link) {\n      let hash = link.Hash;\n      if (hash.includes('/')) {\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${ hash }`;\n        const stats = await stat.createStat(opts)(ipfsPath);\n        hash = stats.cid;\n      } else {\n        hash = cid.CID.parse(hash);\n      }\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${ link.Name }` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      };\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8);\n      }\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = { secs: link.Mtime };\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs;\n        }\n      }\n      return entry;\n    }\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (let result of res.ndjson()) {\n      result = result.Objects;\n      if (!result) {\n        throw new Error('expected .Objects in results');\n      }\n      result = result[0];\n      if (!result) {\n        throw new Error('expected one array in results.Objects');\n      }\n      const links = result.Links;\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links');\n      }\n      if (!links.length) {\n        yield mapLink(result);\n        return;\n      }\n      yield* links.map(mapLink);\n    }\n  }\n  return ls;\n});\nfunction typeOf(link) {\n  switch (link.Type) {\n  case 1:\n  case 5:\n    return 'dir';\n  case 2:\n    return 'file';\n  default:\n    return 'file';\n  }\n}\n\nexports.createLs = createLs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}