{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $abs = GetIntrinsic('%Math.abs%');\nvar $floor = GetIntrinsic('%Math.floor%');\nvar $pow = GetIntrinsic('%Math.pow%');\nvar isFinite = require('./isFinite');\nvar isNaN = require('./isNaN');\nvar isNegativeZero = require('./isNegativeZero');\nvar maxFiniteFloat32 = 3.4028234663852886e+38; // roughly 2 ** 128 - 1\n\nmodule.exports = function valueToFloat32Bytes(value, isLittleEndian) {\n  if (isNaN(value)) {\n    return isLittleEndian ? [0, 0, 192, 127] : [127, 192, 0, 0]; // hardcoded\n  }\n  var leastSig;\n  if (value === 0) {\n    leastSig = isNegativeZero(value) ? 0x80 : 0;\n    return isLittleEndian ? [0, 0, 0, leastSig] : [leastSig, 0, 0, 0];\n  }\n  if ($abs(value) > maxFiniteFloat32 || !isFinite(value)) {\n    leastSig = value < 0 ? 255 : 127;\n    return isLittleEndian ? [0, 0, 128, leastSig] : [leastSig, 128, 0, 0];\n  }\n  var sign = value < 0 ? 1 : 0;\n  value = $abs(value); // eslint-disable-line no-param-reassign\n\n  var exponent = 0;\n  while (value >= 2) {\n    exponent += 1;\n    value /= 2; // eslint-disable-line no-param-reassign\n  }\n  while (value < 1) {\n    exponent -= 1;\n    value *= 2; // eslint-disable-line no-param-reassign\n  }\n  var mantissa = value - 1;\n  mantissa *= $pow(2, 23) + 0.5;\n  mantissa = $floor(mantissa);\n  exponent += 127;\n  exponent <<= 23;\n  var result = sign << 31 | exponent | mantissa;\n  var byte0 = result & 255;\n  result >>= 8;\n  var byte1 = result & 255;\n  result >>= 8;\n  var byte2 = result & 255;\n  result >>= 8;\n  var byte3 = result & 255;\n  if (isLittleEndian) {\n    return [byte0, byte1, byte2, byte3];\n  }\n  return [byte3, byte2, byte1, byte0];\n};","map":{"version":3,"names":["GetIntrinsic","require","$abs","$floor","$pow","isFinite","isNaN","isNegativeZero","maxFiniteFloat32","module","exports","valueToFloat32Bytes","value","isLittleEndian","leastSig","sign","exponent","mantissa","result","byte0","byte1","byte2","byte3"],"sources":["C:/6th sem/bc/Crime-Records-Blockchain/client/node_modules/es-abstract/helpers/valueToFloat32Bytes.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $abs = GetIntrinsic('%Math.abs%');\nvar $floor = GetIntrinsic('%Math.floor%');\nvar $pow = GetIntrinsic('%Math.pow%');\n\nvar isFinite = require('./isFinite');\nvar isNaN = require('./isNaN');\nvar isNegativeZero = require('./isNegativeZero');\n\nvar maxFiniteFloat32 = 3.4028234663852886e+38; // roughly 2 ** 128 - 1\n\nmodule.exports = function valueToFloat32Bytes(value, isLittleEndian) {\n\tif (isNaN(value)) {\n\t\treturn isLittleEndian ? [0, 0, 192, 127] : [127, 192, 0, 0]; // hardcoded\n\t}\n\n\tvar leastSig;\n\n\tif (value === 0) {\n\t\tleastSig = isNegativeZero(value) ? 0x80 : 0;\n\t\treturn isLittleEndian ? [0, 0, 0, leastSig] : [leastSig, 0, 0, 0];\n\t}\n\n\tif ($abs(value) > maxFiniteFloat32 || !isFinite(value)) {\n\t\tleastSig = value < 0 ? 255 : 127;\n\t\treturn isLittleEndian ? [0, 0, 128, leastSig] : [leastSig, 128, 0, 0];\n\t}\n\n\tvar sign = value < 0 ? 1 : 0;\n\tvalue = $abs(value); // eslint-disable-line no-param-reassign\n\n\tvar exponent = 0;\n\twhile (value >= 2) {\n\t\texponent += 1;\n\t\tvalue /= 2; // eslint-disable-line no-param-reassign\n\t}\n\n\twhile (value < 1) {\n\t\texponent -= 1;\n\t\tvalue *= 2; // eslint-disable-line no-param-reassign\n\t}\n\n\tvar mantissa = value - 1;\n\tmantissa *= $pow(2, 23) + 0.5;\n\tmantissa = $floor(mantissa);\n\n\texponent += 127;\n\texponent <<= 23;\n\n\tvar result = (sign << 31)\n        | exponent\n        | mantissa;\n\n\tvar byte0 = result & 255;\n\tresult >>= 8;\n\tvar byte1 = result & 255;\n\tresult >>= 8;\n\tvar byte2 = result & 255;\n\tresult >>= 8;\n\tvar byte3 = result & 255;\n\n\tif (isLittleEndian) {\n\t\treturn [byte0, byte1, byte2, byte3];\n\t}\n\treturn [byte3, byte2, byte1, byte0];\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}