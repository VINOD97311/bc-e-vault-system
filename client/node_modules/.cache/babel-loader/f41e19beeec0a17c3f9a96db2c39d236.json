{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar modeToString = require('./mode-to-string.js');\nvar parseMtime = require('./parse-mtime.js');\nfunction toUrlSearchParams() {\n  let {\n    arg,\n    searchParams,\n    hashAlg,\n    mtime,\n    mode,\n    ...options\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    };\n  }\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n  if (mtime != null) {\n    mtime = parseMtime.parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n  if (mode != null) {\n    options.mode = modeToString.modeToString(mode);\n  }\n  if (options.timeout && !isNaN(options.timeout)) {\n    options.timeout = \"\".concat(options.timeout, \"ms\");\n  }\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(arg => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n}\nexports.toUrlSearchParams = toUrlSearchParams;","map":{"version":3,"names":["Object","defineProperty","exports","value","modeToString","require","parseMtime","toUrlSearchParams","arg","searchParams","hashAlg","mtime","mode","options","arguments","length","undefined","hash","secs","mtimeNsecs","nsecs","timeout","isNaN","concat","Array","isArray","urlSearchParams","URLSearchParams","forEach","append"],"sources":["C:/6th sem/bc/Crime-Records-Blockchain/client/node_modules/ipfs-http-client/cjs/src/lib/to-url-search-params.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar modeToString = require('./mode-to-string.js');\nvar parseMtime = require('./parse-mtime.js');\n\nfunction toUrlSearchParams({arg, searchParams, hashAlg, mtime, mode, ...options} = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    };\n  }\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n  if (mtime != null) {\n    mtime = parseMtime.parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n  if (mode != null) {\n    options.mode = modeToString.modeToString(mode);\n  }\n  if (options.timeout && !isNaN(options.timeout)) {\n    options.timeout = `${ options.timeout }ms`;\n  }\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(arg => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n}\n\nexports.toUrlSearchParams = toUrlSearchParams;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,YAAY,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACjD,IAAIC,UAAU,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAE5C,SAASE,iBAAiBA,CAAA,EAA6D;EAAA,IAA5D;IAACC,GAAG;IAAEC,YAAY;IAAEC,OAAO;IAAEC,KAAK;IAAEC,IAAI;IAAE,GAAGC;EAAO,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACnF,IAAIL,YAAY,EAAE;IAChBI,OAAO,GAAG;MACR,GAAGA,OAAO;MACV,GAAGJ;IACL,CAAC;EACH;EACA,IAAIC,OAAO,EAAE;IACXG,OAAO,CAACI,IAAI,GAAGP,OAAO;EACxB;EACA,IAAIC,KAAK,IAAI,IAAI,EAAE;IACjBA,KAAK,GAAGL,UAAU,CAACA,UAAU,CAACK,KAAK,CAAC;IACpCE,OAAO,CAACF,KAAK,GAAGA,KAAK,CAACO,IAAI;IAC1BL,OAAO,CAACM,UAAU,GAAGR,KAAK,CAACS,KAAK;EAClC;EACA,IAAIR,IAAI,IAAI,IAAI,EAAE;IAChBC,OAAO,CAACD,IAAI,GAAGR,YAAY,CAACA,YAAY,CAACQ,IAAI,CAAC;EAChD;EACA,IAAIC,OAAO,CAACQ,OAAO,IAAI,CAACC,KAAK,CAACT,OAAO,CAACQ,OAAO,CAAC,EAAE;IAC9CR,OAAO,CAACQ,OAAO,MAAAE,MAAA,CAAOV,OAAO,CAACQ,OAAO,OAAK;EAC5C;EACA,IAAIb,GAAG,KAAKQ,SAAS,IAAIR,GAAG,KAAK,IAAI,EAAE;IACrCA,GAAG,GAAG,EAAE;EACV,CAAC,MAAM,IAAI,CAACgB,KAAK,CAACC,OAAO,CAACjB,GAAG,CAAC,EAAE;IAC9BA,GAAG,GAAG,CAACA,GAAG,CAAC;EACb;EACA,MAAMkB,eAAe,GAAG,IAAIC,eAAe,CAACd,OAAO,CAAC;EACpDL,GAAG,CAACoB,OAAO,CAACpB,GAAG,IAAIkB,eAAe,CAACG,MAAM,CAAC,KAAK,EAAErB,GAAG,CAAC,CAAC;EACtD,OAAOkB,eAAe;AACxB;AAEAxB,OAAO,CAACK,iBAAiB,GAAGA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script"}